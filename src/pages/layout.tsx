import Head from "next/head";
import NavigationBar from "../components/navigation-bar";
import { Toaster } from "@/components/ui/toaster";
import SettingsBar from "@/components/settings-bar";
import { signIn, useSession } from "next-auth/react";
import Homepage from "@/components/home-page";
import { useRouter } from "next/router";
import { Inter } from "next/font/google";
import { useContext } from "react";
import { TeamContext } from "@/contexts/teamContext/team-provider";
import { api } from "@/utils/api";
import { LeagueContext } from "@/contexts/leagueContext/league-provider";
import LoadingSpinner from "@/components/loading";

const inter = Inter({
  subsets: ["latin"],
  variable: "--font-inter",
});

export default function Layout({ children }: { children: React.ReactNode }) {
  const { teamId, setTeamId } = useContext(TeamContext);
  const { setLeagueId } = useContext(LeagueContext);
  const { data: sessionData, status } = useSession();
  const { data, isLoading } = api.team.getAll.useQuery();

  const router = useRouter();

  // wait for session to load
  if (status === "loading") return <LoadingSpinner />;

  // you clicked a join team link, but you are not logged in, redirect to login
  if (!sessionData && router.pathname === "/team/join/[id]")
    return void signIn();

  // you are not logged in and not at join team link, show homepage
  if (!sessionData && router.pathname !== "/team/join/[id]")
    return <Homepage />;

  // your logged in, in a team, there are teams, at homepage, redirect to leaderboard page
  if (
    !!sessionData &&
    !!sessionData.user &&
    router.pathname === "/" &&
    teamId !== "" &&
    !isLoading &&
    !!data &&
    data.length !== 0
  )
    void router.push("/leaderboard").then(() => router.reload());

  // your logged in, not in a team, not at homepage, redirect to homepage
  if (
    !!sessionData &&
    !!sessionData.user &&
    router.pathname !== "/" &&
    teamId === ""
  )
    void router.push("/").then(() => router.reload());

  // you have no team selected, but there are teams, select the first team
  if (teamId === "" && !isLoading && !!data && data.length !== 0 && !!data[0])
    setTeamId(data[0].id);

  // theres no teams, reset teamId and leagueId
  if (!isLoading && !!data && data.length === 0 && teamId !== "") {
    setTeamId("");
    setLeagueId("");
  }

  return (
    <>
      <Head>
        <title>Eloplay</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/table_tennis.png" />
      </Head>
      <main
        className={`relative m-auto flex min-h-screen max-w-[700px] flex-col items-center bg-background ${inter.variable} font-inter`}
      >
        <SettingsBar />
        <Toaster />
        {children}
        <NavigationBar />
      </main>
    </>
  );
}
